apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'

def customizeConfig = rootProject.ext.android //android配置
def rootDependencies = rootProject.ext.dependencies //库依赖

android {

    signingConfigs {
        config {
            storeFile file("appkey.jks")
            storePassword KEY_PASS
            keyAlias ALIAS_NAME
            keyPassword ALIAS_PASS
        }
    }

    compileSdkVersion customizeConfig.compileSdkVersion
    buildToolsVersion customizeConfig.androidLibVersion

    lintOptions {
        abortOnError false
        warning 'InvalidPackage'
    }

    defaultConfig {
        applicationId "com.dale.libdemo"
        minSdkVersion customizeConfig.minSdkVersion
        targetSdkVersion customizeConfig.targetSdkVersion
        multiDexEnabled true
        versionCode appVersionCode as int
        versionName appVersionName
        flavorDimensions "versionCode"
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"


        //以下三个极光推送
        manifestPlaceholders = [
                JPUSH_PKGNAME : "com.dale.libdemo",
                JPUSH_APPKEY : "e7a2d8a829a178752d0e279c", //JPush 上注册的包名对应的 Appkey.
                JPUSH_CHANNEL : "developer-default", //暂时填写默认值即可.
        ]

        javaCompileOptions {
            annotationProcessorOptions {
                includeCompileClasspath = true
            }
        }

        ndk {
            // 设置支持的SO库架构
            abiFilters 'armeabi',"armeabi-v7a"
        }

    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.config
        }


        debug {
            minifyEnabled false //true开启混淆配置
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.config

            //debug版本禁用生成多个apk
            ext.enableCrashlytics = false
            aaptOptions.cruncherEnabled = false//禁用PNG运算 为了加快编译速度
            splits.abi.enable = false
            splits.density.enable = false
        }
    }

    lintOptions {
        abortOnError false
        //忽略警告
        ignoreWarnings true
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

}

repositories {
    flatDir {
        dirs 'libs'
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'androidx.core:core-ktx:1.1.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation 'net.jodah:typetools:0.4.0'

    testImplementation rootDependencies["junit"]
    androidTestImplementation rootDependencies["test_runner"]
    androidTestImplementation rootDependencies["espresso_core"]


    implementation rootDependencies["butterknife"]
    annotationProcessor rootDependencies["butterknife_compiler"]

    annotationProcessor rootDependencies["glide_compiler"] //glide

    implementation rootDependencies["appcompat"]
    implementation rootDependencies["recyclerview"]
    implementation rootDependencies["design"]
    implementation rootDependencies["Gson"]
    implementation rootDependencies["okhttp"]
    implementation rootDependencies["glide"]
    implementation rootDependencies["webviewSonic"]
    implementation rootDependencies["multidex"]
    implementation rootDependencies["mmkv"]
    implementation rootDependencies["glide_transformations"]


    implementation project(path: ':ABPush') //非必须
    implementation project(path: ':ABLocation') //非必须

    implementation project(path: ':ABBaseAdapter')
    implementation project(path: ':imagelib')
    implementation project(path: ':utilslib')
    implementation project(path: ':ABView')
    implementation project(path: ':PickerviewLib')
    implementation project(path: ':ABNetLib')
    implementation project(path: ':PopupLib')
    implementation project(path: ':XWebView')
    implementation project(path: ':ABRefreshView')
    implementation project(path: ':ABZxing')
    implementation project(path: ':abemoji')
    implementation project(path: ':ABAudio')

//    implementation project(path: ':ABFrameWork')

    implementation project(path: ':XFragmentLib')
    implementation project(path: ':xframework')



    //图片选择框架用到的四个
    implementation 'com.squareup.picasso:picasso:2.5.2'
    implementation 'org.xutils:xutils:3.3.36'
    implementation 'com.nostra13.universalimageloader:universal-image-loader:1.9.5'
    implementation 'com.lzy.widget:view-core:0.2.1'

    implementation 'com.squareup.leakcanary:leakcanary-android:1.6.3'
    implementation 'com.squareup.leakcanary:leakcanary-support-fragment:1.6.3'

    implementation 'com.airbnb.android:lottie:2.7.0'
    implementation project(path: ':tasklib')
    implementation project(path: ':ABVideoPlayer')
    implementation 'tv.danmaku.ijk.media:ijkplayer-java:0.8.8'
    implementation 'tv.danmaku.ijk.media:ijkplayer-armv7a:0.8.8'


    //数据库
    implementation project(path: ':ABRoom')
    implementation rootDependencies["room_runtime"]
    implementation rootDependencies["room_rxjava2"]
    annotationProcessor rootDependencies["room_compiler"]

//    implementation rootDependencies["AB_Adapter"]
//    implementation rootDependencies["AB_FrameWork"]
//    implementation rootDependencies["AB_Location"]
//    implementation rootDependencies["AB_NetX"]
//    implementation rootDependencies["AB_Push"]
//    implementation rootDependencies["AB_RefreshView"]
//    implementation rootDependencies["AB_View"]
//    implementation rootDependencies["AB_Zxing"]
//    implementation rootDependencies["AB_ImagePicker"]
//    implementation rootDependencies["AB_Pickerview"]
//    implementation rootDependencies["AB_Xpopup"]
//    implementation rootDependencies["AB_UtilsX"]
//    implementation rootDependencies["AB_WebView"]

    implementation "androidx.work:work-runtime:2.2.0"
    implementation project(path: ':kotlinlib')

    //协程库
//    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.3.2'

    implementation 'androidx.swiperefreshlayout:swiperefreshlayout:1.1.0-alpha03'
    implementation project(path: ':ABChat')

//    implementation 'com.lovedise:permissiongen:0.0.6'


    // 添加 LiveData 和 ViewModel 的依赖：
    implementation "androidx.lifecycle:lifecycle-extensions:2.2.0"
    implementation project(path: ':ABTalk')

    //分开的依赖
//    implementation "androidx.lifecycle:lifecycle-livedata:2.2.0-rc03"
//    implementation "androidx.lifecycle:lifecycle-viewmodel:2.2.0-rc03"
   //融云
    implementation 'cn.rongcloud.sdk:im_lib:2.10.3'
//    implementation project(path: ':glidelib')

}
