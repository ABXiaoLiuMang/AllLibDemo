apply plugin: 'com.android.library'

if ("true" == frameLib){
    apply plugin: 'com.novoda.bintray-release'
}


def customizeConfig = rootProject.ext.android //android配置
def rootDependencies = rootProject.ext.dependencies //库依赖

android {
    compileSdkVersion customizeConfig.compileSdkVersion
    buildToolsVersion customizeConfig.androidLibVersion

    lintOptions {
        abortOnError false
        warning 'InvalidPackage'
        disable 'PrivateResource'
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    defaultConfig {
        vectorDrawables.useSupportLibrary = true
        minSdkVersion customizeConfig.minSdkVersion
        targetSdkVersion customizeConfig.targetSdkVersion
        versionCode appVersionCode as int
        versionName appVersionName


        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        javaCompileOptions {
            annotationProcessorOptions {
                includeCompileClasspath = true
            }
        }

    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    testImplementation rootDependencies["junit"]
    androidTestImplementation rootDependencies["test_runner"]
    androidTestImplementation rootDependencies["espresso_core"]


    compileOnly rootDependencies["butterknife"]
    annotationProcessor rootDependencies["butterknife_compiler"]


    compileOnly rootDependencies["appcompat"]
    compileOnly rootDependencies["recyclerview"]
    compileOnly rootDependencies["design"]
    compileOnly rootDependencies["Gson"]
    compileOnly rootDependencies["webviewSonic"]


    compileOnly project(path: ':ABPush') //非必须
    compileOnly project(path: ':ABLocation') //非必须

    compileOnly project(path: ':ABBaseAdapter')
    compileOnly project(path: ':imagelib')
    compileOnly project(path: ':utilslib')
    compileOnly project(path: ':ABView')
    compileOnly project(path: ':PickerviewLib')
    compileOnly project(path: ':ABNetLib')
    compileOnly project(path: ':PopupLib')
    compileOnly project(path: ':XWebView')
    compileOnly project(path: ':ABRefreshView')
    compileOnly project(path: ':ABZxing')
}

if ("true" == frameLib){
    publish {
        userOrg = 'abxingxing'   //组织名称 organization 建议写用户名（bintray.com用户名）
        groupId = 'com.dale.x'  //jcenter上的路径
        artifactId = 'AB_FrameWork'  //项目名称
        publishVersion = frameLib_version    //版本号
        desc = 'AB_FrameWork'
        website = 'https://github.com/ABXiaoLiuMang/AllLibDemo/tree/master/ABFrameWork'
        licences = 'Apache-2.0'
    }
}

